package com.kodlamaoi.rentalService.business.concretes;



import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.kafka.core.ProducerPostProcessor;
import org.springframework.stereotype.Service;

import com.kodlamaoi.common.events.RentalCreatedEvent;
import com.kodlamaoi.common.utilities.mapping.ModelMapperService;
import com.kodlamaoi.rentalService.business.abstracts.RentalService;
import com.kodlamaoi.rentalService.business.request.CreateRentalRequest;
import com.kodlamaoi.rentalService.business.request.UpdateRentalRequest;
import com.kodlamaoi.rentalService.business.response.CreateRentalResponse;
import com.kodlamaoi.rentalService.business.response.GetAllRentalResponse;
import com.kodlamaoi.rentalService.business.response.UpdateRentalResponse;
import com.kodlamaoi.rentalService.dataAccess.abstracts.RentalRepository;
import com.kodlamaoi.rentalService.entity.Rental;
import com.kodlamaoi.rentalService.kafka.RentalProducer;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor

public class RentalManager implements RentalService{

	private ModelMapperService modelMapperService;
	private RentalRepository rentalRepository;
	private RentalProducer  rentalProducer;
	
	@Override
	public CreateRentalResponse add(CreateRentalRequest createRentalRequest) {
		Rental rental=this.modelMapperService.forRequest().map(createRentalRequest, Rental.class);
		rental.setId(UUID.randomUUID().toString());
		rental.setDateStarted(LocalDateTime.now());
		this.rentalRepository.save(rental);
		
		RentalCreatedEvent rentalCreatedEvent = new RentalCreatedEvent();
		rentalCreatedEvent.setCarId(createRentalRequest.getCarId());
		rentalCreatedEvent.setMessage("Rental Created");
		
		this.rentalProducer.sendMessage(rentalCreatedEvent);
		CreateRentalResponse response = this.modelMapperService.forResponse().map(rental, CreateRentalResponse.class);
		
		return response;
	}

	@Override
	public UpdateRentalResponse update(UpdateRentalRequest UpdateRentalRequest) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<GetAllRentalResponse> getAll() {
		List<Rental> rentals=this.rentalRepository.findAll();
		List<GetAllRentalResponse> response=rentals.stream().map(rental->this.modelMapperService.forResponse().map(rental, GetAllRentalResponse.class)).collect(Collectors.toList());
		return response;
	}

	@Override
	public void delete(String id) {
	
		this.rentalRepository.findById(id);
		
	}

}
