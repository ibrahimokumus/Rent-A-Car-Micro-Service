package com.kodlamaio.inventoryService.business.concretes;

import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

import com.kodlamaio.inventoryService.business.abstracts.CarService;
import com.kodlamaio.inventoryService.business.request.create.CreateCarRequest;
import com.kodlamaio.inventoryService.business.request.update.UpdateCarRequest;
import com.kodlamaio.inventoryService.business.response.create.CreateCarResponse;
import com.kodlamaio.inventoryService.business.response.get.GetAllCarResponse;
import com.kodlamaio.inventoryService.business.response.update.UpdateCarResponse;
import com.kodlamaio.inventoryService.dataAccess.abstracts.CarRepository;
import com.kodlamaio.inventoryService.entities.Car;
import com.kodlamaoi.common.utilities.exceptions.BusinessException;
import com.kodlamaoi.common.utilities.mapping.ModelMapperService;

public class CarManager implements CarService {
	private CarRepository carRepository;
	private ModelMapperService modelMapperService;

	@Override
	public List<GetAllCarResponse> getAll() {
		
		List<Car> cars = this.carRepository.findAll();

		List<GetAllCarResponse> response = cars.stream()
				.map(car -> this.modelMapperService.forResponse().map(car, GetAllCarResponse.class))
				.collect(Collectors.toList());

		return response;
		
	}

	@Override
	public CreateCarResponse add(CreateCarRequest createCarRequest) {
		checkIfCarExistsByPlate(createCarRequest.getPlate());
		Car car = this.modelMapperService.forRequest().map(createCarRequest, Car.class);
		car.setId(UUID.randomUUID().toString());
		
		this.carRepository.save(car);
		
		CreateCarResponse createCarResponse = this.modelMapperService.forResponse().map(car, CreateCarResponse.class);
		return createCarResponse;
	}

	

	@Override
	public void delete(String id) {
		checkIfCarExistById(id);
		this.carRepository.findById(id);
		
	}

	@Override
	public UpdateCarResponse update(UpdateCarRequest updateCarRequest) {
		// TODO Auto-generated method stub
		return null;
	}
	
	private void checkIfCarExistsByPlate(String plate) {
		Car currentBrand = this.carRepository.findByPlate(plate);
		if(currentBrand!=null) {
		    throw new BusinessException("CAR.EXISTS");
		}
	}
	
	private void checkIfBrandExistById(String id) {
        if (carRepository.findById(id) == null)
            throw new BusinessException("CAR NOT FOUND");
    }
}
